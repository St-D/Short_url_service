Структура приложения и некоторые комментарии:

r/index.php
-используется для переадресации коротких ссылок; 
-располагается в отдельной директории, для того, чтобы уменьшить полученную короткую ссылку,
за счет игнорирования дефолтного имени index.php;
- обновляет дату последнего перехода по короткой ссылке;
- инкрементирует соответствующий счетчик;

about.php 
- справочная информация; 

api.php
- реализация простейшей API:
	Получает GET запросы в адресной строке,
	Декодирует от экранирования спец символов,
	Передает в контроллер генерации коротких ссылок.
	Возвращает клиенту полученный JSON массив с явным указанием заголовка как 'Content-type: application/json'.
	
auth_db.php 
- создаёт(проверяет наличие) таблицы в БД для корректной работы сайта;
- содержит данные для подключения к БД;
- содержит указатель на соединение с БД.

clear_db.php
- скрипт для запуска через CRON;
- по условиям задания очищает записи БД созданные более 15дней назад;
- запускается на хостинге с периодом раз в неделю.

create_short_url.php
- основной контроллер обработки AJAX запроса формы index.php, API запроса при обращении к r/index.php;
- в зависимости от переменных 'l_url' и 's_url' суперглобального массива $_POST обращается к функции генерации ссылок или к БД.
- осуществляет предварительную валидацию входных данных до обращения к БД;
- по условиям задания проверяет ответ сервера на переданную "длинную" ссылку.
- при генерации новой ссылки делает на проверку наличия полученного рандома УЖЕ существующему в базе. 
- возвращает массив вида:
        "l_url" => $l_url, 				- полная (длинная) ссылка; (может быть получена по короткой ссылки из БД)
        "s_url" => $s_url,				- полученная коротка ссылка;
        "db_er" => $db_error,			- статус на AJAX запрос / регулирует манипуляции в зависимости от статуса / подробно можно посмотреть в комментах <ajax_proc.js> 
        "debug" => $data_for_debug		- отладочная информация. предполагалось использовать для отладки или для информации в сплывающих статусах на странице формы..... или можно удалить.
										.... также отображается при запросе через API.
										
for_web_masters.php 
- описание работы API. Приведены примеры.

index.php
- главная страница;
- содержит форму обработки данных;
- данные формы отправляются AJAX;
- также через манипуляции появляются и исчезают сообщения статуса под формой.


show_log.php
- выводит данные таблицы.
- среди них (по условию задания) счетчик переходов;
- дата создания короткой ссылки;
- дата последнего перехода по ней;


SafeMySQL.php
- класс для безопасной работы с БД;
- позаимствован отсюда: https://habrahabr.ru/post/165069/Этот/ 
- примеры использования в соответствующем  PDF файле.





























